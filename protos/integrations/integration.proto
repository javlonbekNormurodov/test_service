syntax = "proto3";

package integrations;

option go_package = "test_service/generated/integration_service";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: { title: "API" version: "1.0.0" }
    security_definitions: {
        security: {
            key: "bearer"
            value: { type: TYPE_API_KEY in: IN_HEADER name: "Authorization" description: "Authentication token, prefixed by Bearer: Bearer <token>" }
        }
    }
    security: { security_requirement: { key: "bearer" } }
};

message CreateRequest {
    string name = 1;
}

message FullResponse {
    string id         = 1;
    string name       = 2;
    string created_at = 3 [json_name = "created_at"];
    string updated_at = 4 [json_name = "updated_at"];
    string deleted_at = 5 [json_name = "delete_at"];
}

message GetByIDRequest {
    string id = 1;
}

message GetListResponse {
    repeated FullResponse response = 1;
}

message GetListRequest {
    int32 limit  = 1;
    int32 offset = 2;
}

message UpdateRequest {
    string id   = 1;
    string name = 2;
}

message DeleteRequest {
    string id = 1;
}

message DeleteResponse {
    string message = 1;
}

service Integration {
    rpc CreateIntegration(CreateRequest) returns (FullResponse) {
        option (google.api.http) = {
            post: "/v1/api/integration",
            body: "*"
        };
    }
    rpc GetIntegrationsList(GetListRequest) returns (GetListResponse) {
        option (google.api.http) = {
            get: "/v1/api/integration",
        };
    }
    rpc GetIntegrationById(GetByIDRequest) returns (FullResponse) {
        option (google.api.http) = {
            get: "/v1/api/integration/{id}",
        };
    }
    rpc UpdateIntegration(UpdateRequest) returns (FullResponse) {
        option (google.api.http) = {
            put: "/v1/api/integration/{id}",
        };
    }
    rpc Delete(DeleteRequest) returns (DeleteResponse) {
        option (google.api.http) = {
            delete: "/v1/api/integration/{id}",
        };
    }
}
